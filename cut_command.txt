cut command is useful to select specific column or field from a given string or text based on delimiter

delimiter: it is a character, which is used to seperate column or field

default delimiter is a tab and we can change it with -d option
-d value is always a single character.
here -d is optional, but -f which is field is manadatory.

-f1 means first field from left matching the delimiter.

Ex:
➜  /tmp cat demodata.txt       
root:x:0:0:root:/root:/usr/bin/zsh

➜  /tmp cut -d ':' -f1 demodata.txt
root

➜  /tmp cut -d ':' -f1 <demodata.txt 
root

we can specify multiple fields combined using -f1-4

Ex:
➜  /tmp cut -d ':' -f1-3 demodata.txt 
root:x:0

➜  /tmp cut -d ':' -f1-5 demodata.txt
root:x:0:0:root

if we want to get until last field -f1-

➜  /tmp cut -d ':' -f1- demodata.txt 
root:x:0:0:root:/root:/usr/bin/zsh

To get last field of the column by using pipe(|) and rev commands along with cut command.

Ex: 
➜  /tmp cat demodata.txt
root:x:0:0:root:/root:/usr/bin/zsh

➜  /tmp cat demodata.txt | rev | cut -d ':' -f1 | rev
/usr/bin/zsh

Note:
If we use -f1-5 it will output from 1 to 5 (Between fields were included)
If we use -f1,5 it will only output 1st and  5th fields (Between fields were Excluded)

➜  /tmp cat demodata.txt             
root:x:0:0:root:/root:/usr/bin/zsh

➜  /tmp cut -d ':' -f1-7 demodata.txt
root:x:0:0:root:/root:/usr/bin/zsh
➜  /tmp cut -d ':' -f1,7 demodata.txt
root:/usr/bin/zsh

To replace the above delimiter : with a single letter space
using --output-delimiter
Ex:
➜  /tmp cut -d ':' --output-delimiter ' ' -f1,7 demodata.txt
root /usr/bin/zsh

=======================================

using c character instead of delimiter and field

Ex:
➜  /tmp cat demodata.txt      
root:x:0:0:root:/root:/usr/bin/zsh
➜  /tmp cut -c1-4 demodata.txt
root
-----------------------------------------